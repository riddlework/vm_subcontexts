seg fault handler

use mprotect system call -- change permissions on a page without changing its logical context
play around with signal hanlder -- calling sig action on SEGV
must have persistent global data structure maintained by the library by saying here are the existing subcontexts that are mapped in
anything that's undocumented we assume is part of the root?

ultimate goal? we want to do a function call from the client into the server, we want this to trigger a seg fault which will cause us to call mprotect to change the permissions on all the pages

disable execute permissions on the client, because we want to have this same process

only one subcontext can have executable pages at one time

when seg fault on coming back to client, removes permissions from mapped subcontext

when an overlapped subcontext makes a call into a mapped subcontext, it
triggers a seg fault. the seg fault handler disables permissions in the
overlapped subcontext (all executables except for the library) and enables
permissions in the mapped subcontext, once it verifies that the call is valid.
